\documentclass{article}

\usepackage{natbib}
\usepackage{graphics}
\usepackage{amsmath}
\usepackage{indentfirst}
\usepackage[utf8]{inputenc}
\usepackage{hyperref}

\DeclareMathOperator{\var}{var}
\DeclareMathOperator{\cov}{cov}

% \VignetteIndexEntry{gdistance package}

\begin{document}

<<foo,include=FALSE,echo=FALSE>>=
options(keep.source = TRUE, width = 60)
foo <- packageDescription("gdistance")
@

\title{R package gdistance: distances and movements on geographical grids (version \Sexpr{foo$Version})}
\author{Jacob van Etten}
\maketitle

\section{Introduction}

This vignette describes the R package \verb@gdistance@. This package provides functionality to calculate various geographic distance measures. Tobler's First Law of Geography states that “everything is related to everything else, but near things are more related than distant things” (Tobler 1970). Mutual distances can be used to predict similarity and dissimilarity in geographical space, the main explanandum of geography. 

Similarity is related to the intensity of interaction between spatial elements. Interaction consists in movement or communication in geographical space. Geographical distance is indicative of the cost or time required to realize movement of organisms, material or information between a pair of locations. A higher intensity of interaction is expected when this supposes less effort or travel time. 

In reality, travel time not only depends on the absolute distance between points. It depends on the mode of route-finding, the means of transport, and the characteristics of landscapes and infrastructure. Package \verb@gdistance@ provides the following distance measures.
\begin{itemize}
\item{The great-circle distance reflects the travel time of goal-directed movement with no obstacles, `as the crow flies'.}
\item{The least-cost distance mimics route finding `as the fox runs', taking into account obstacles and the local `friction' of the landscape.}
\item{A very different form of movement in geographical space is the random walk, which has no predetermined destination (`drunkard's walk'). Resistance distance reflects (Brownian) random walks in geographical space (McRae 2006).}
\item{`Randomised shortest paths' are an intermediate form between shortest paths and Brownian random walks, recently introduced by Saerens et al. (2009).}
\end{itemize} 

Similarity between geographical elements is not necessarily caused by direct, mutual spatial interaction. It may reflect diffusion starting from an independent, third point, which functions as a dominant source. For instance, diffusion from a single origin explains the current geographical patterns of genetic differences of humans, who spread from Africa to other continents. Using random walk or randomised shortest path algorithms, it is possible to calculate for each pair of points which parts of their dispersal trajectories from a common origin overlap and which parts diverge. These measures may be used as predict mutual similarity, treating them as if they were geographic distances. These metrics can be computed with \verb@gdistance@. Also, it is possible to visualize dispersal paths. 

The package is currently limited to the distance measures and movement models listed above and dispersal path metrics derived from random walks and randomised shortest paths. All these are metrics that can be calculated with deterministic algorithms based on analytical solutions using matrix solving. The Lévy flight or walk, another important model of geographical movement, is not implemented. It is an obvious candidate to be included in the package, but requires more complex methods. Approximate, matrix-based methods for Lévy-like models will be considered in future versions of \verb@gdistance@. 

The package \verb@gdistance@ illustrates the potential of R spatial software to move from a map-centric approach in geo-information science to a more data-centric and model-centric approach. The package \verb@gdistance@ makes it possible to move seamlessly from geographical grids and points to transition matrices and mutual distances, and (with the help of other packages) to tree representations of distances, correlation and regression with distance matrices, and diversity calculations. This overcomes the privileged status of map-based data presentations common in dominant GIS software and integrates geo-spatial analysis fully in the `programming with data' paradigm. Tailoring analyses to different geo-spatial problems is made easier, which should benefit the quality of quantitative methodology in geographical research.

\section{Class Transition}
To make distance calculations as flexible as possible, \verb@gdistance@ is build around the class Transition. This class contains all the necessary geographic references (projection, resolution, extent) as well as a transition matrix which specifies the probability (or cost) with which movements between cells occur. Transition objects can be constructed with a user-defined function from an object of class Raster*. This is a class from \verb@raster@, a package which contains all grid functionality expected from normal GIS software and more. 

<<gdistance-1>>=
library(gdistance)
#create a new raster and set all its values to unity.
raster <- raster(nrows=18, ncols=36) 
raster <- setValues(raster,rep(1,ncell(raster)))

#create a Transition object from the raster
tr <- TransitionFromRaster(raster, mean, 4)
tr
@

This connects all adjacent cells in 4 directions. Cells can also be connected in 8 or 16 connections.

Different arithmetic and mathematical operations can be done with Transition objects. This makes it possible to model different components of landscape friction separately.

<<gdistance-2>>=
tr <- tr*tr
tr <- tr+tr
tr <- tr*3
tr <- sqrt(tr)
@

Transition objects should not contain isolated 'clumps'. This can be checked visually and avoided when creating Transition objects. This can be done by plotting the original Raster* object. An alternative is to create a RasterLayer object from the Transition object and plot this.

<<gdistance-2>>=
r <- TransitionMap(tr)
plot(r)
@

\section{Correcting inter-cell transition values}

<<gdistance-2>>=
trCorr <- geoCorrection(tr, type="c", multpl=FALSE)
@

\section{Calculating distances}

\section{Dispersal paths}

\section{Path overlap and non-overlap}

\section{References}

McRae B.H., B.G. Dickson, and T. Keitt. 2008. Using circuit theory to model connectivity in ecology, evolution, and conservation. \emph{Ecology} 89:2712-2724.
  
Saerens M., L. Yen, F. Fouss, and Y. Achbany. 2009. Randomized shortest-path problems: two related models. \emph{Neural Computation}, 21(8):2363-2404.

Tobler W. 1970.

\end{document}
